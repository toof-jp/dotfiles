snippet cp
  #include <bits/stdc++.h>
  using namespace std;
  typedef long long ll;
  typedef pair<int, int> pii;
  #define rep(i, n) for(ll i = 0;i < n;i++)
  template<class T, class U> void cmax(T& a, U b) { if (a<b) a = b; }
  template<class T, class U> void cmin(T& a, U b) { if (a>b) a = b; }

  int main() {
    cin.tie(0); ios::sync_with_stdio(false);

    ${0:TARGET}
  }

snippet rep
  rep(${1:i}, ${2}) {
    ${3:TARGET}
  }

snippet FOR
alias for
  FOR(${1:i}, ${2}, ${3}) {
    ${4:TARGET}
  }

snippet dijkstra
  vector<int> dijkstra(int s, vector<vector<pii>> G) {
    priority_queue<pii, vector<pii>, greater<pii>> que;
    vector<int> d(n, INF);
    d[s] = 0;
    que.push(pii(0, s));

    while(!que.empty()) {
      pii p = que.top(); que.pop();
      int v = p.second;
      if (d[v] < p.first) continue;
      for (auto&& e : G[v]) {
        if (d[e.first] > d[v] + e.second) {
          d[e.first] = d[v] + e.second;
          que.push(pii(d[e.first], e.first));
        }
      }
    }
    return d;
  }

snippet hoge
  int x8[8] = {1, -1, 0, 0, 1, 1, -1, -1};
  int y8[8] = {0, 0, 1, -1, 1, -1, 1, -1};
  long long int gcd(long long int a, long int b) {
    if (b == 0) return a;
    return gcd(b, a%b);
  }
  long long int lcm(long long int a, long long int b) {
    return a*b / gcd(a, b);
  }
