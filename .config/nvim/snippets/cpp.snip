snippet cp
  #include "../../library/template.hpp"

  int main() {
    ${0:TARGET}
  }

snippet in
  #include "../../library/${0:TARGET}"

snippet rep
  rep(${1:i}, ${2}) {
    ${3:TARGET}
  }

snippet rep3
  rep3(${1:i}, ${2}, ${3}) {
    ${4:TARGET}
  }

snippet per
  per(${1:i}, ${2}) {
    ${3:TARGET}
  }

snippet per3
  per3(${1:i}, ${2}, ${3}) {
    ${4:TARGET}
  }

snippet     forr
options     head
abbr        for (:) {}
  for (${1:auto&& }${2:var} : ${3:container}) {
    ${0:TARGET}
  }

snippet tem
  #include <bits/stdc++.h>
  using namespace std;

  using ll = long long;
  using pl = pair<ll, ll>;
  using vl = vector<ll>;
  #define rep(i, n) for(ll i = 0; i < (ll)n; i++)
  #define rep3(i, l, r) for(ll i = l; i < (ll)r; i++)
  #define per(i, n) for(ll i = n-1; i >= 0; i--)
  #define per3(i, l, r) for(ll i = r-1; i >= (ll)l; i--)
  #define all(v) begin(v), end(v)
  template<class T, class U>
  inline void cmax(T& a, U b) { if (a < b) a = b; }
  template<class T, class U>
  inline void cmin(T& a, U b) { if (a > b) a = b; }

  struct IoSetup {
    IoSetup() {
      cin.tie(nullptr);
      ios::sync_with_stdio(false);
      cout << fixed << setprecision(15);
      cerr << fixed << setprecision(15);
    }
  } io_setup;

  constexpr char el = '\n';

  int main() {
    ${0:TARGET}
  }

snippet yy
  cout << (${1} ? "Yes" : "No") << el;

snippet YY
  cout << (${1} ? "YES" : "NO") << el;

snippet Yy
  cout << (${1} ? "yes" : "no") << el;
